<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>changed</key>
	<dict>
		<key>repository.declarations.repository.function-body</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.definition.function.body.swift</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>repository.declarations.repository.function-initializer.end</key>
		<string>\}|\G$</string>
		<key>repository.declarations.repository.function-initializer.patterns</key>
		<array>
			<dict>
				<key>include</key>
				<string>#comments</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#generic-parameter-clause</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#parameter-clause</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(?:throws|rethrows)\b</string>
				<key>name</key>
				<string>keyword.control.exception.swift</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Swift 3: generic constraints after the parameters and return type</string>
				<key>include</key>
				<string>#generic-where-clause</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#function-body</string>
			</dict>
		</array>
		<key>repository.declarations.repository.function-test</key>
		<dict>
			<key>begin</key>
			<string>(?x)
						\b
						(func)
						\s+
						(
							test[\p{L}_\p{N}\p{M}]*
						)
						\s*
						(?=\(|&lt;)
					</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.swift</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.test.swift</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.identifier.swift</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\}|\G$)(?# functions in protocol declarations or generated interfaces have no body)</string>
			<key>name</key>
			<string>meta.definition.function.test.swift</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic-parameter-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parameter-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-result</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:throws|rethrows)\b</string>
					<key>name</key>
					<string>keyword.control.exception.swift</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Swift 3: generic constraints after the parameters and return type</string>
					<key>include</key>
					<string>#generic-where-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-test-body</string>
				</dict>
			</array>
		</dict>
		<key>repository.declarations.repository.function-test-body</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.definition.function.test.body.swift</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>repository.declarations.repository.function.begin</key>
		<string>(?x)
                        \b
                        (func)
                        \s+
                        (   
                            (?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;)
                          | (?:
                                (
                                    (?&lt;oph&gt;                                # operator-head
                                        [/=\-+!*%&lt;&gt;&amp;|^~?]
                                      | [\x{00A1}-\x{00A7}]
                                      | [\x{00A9}\x{00AB}]
                                      | [\x{00AC}\x{00AE}]
                                      | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
                                      | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
                                      | [\x{2030}-\x{203E}]
                                      | [\x{2041}-\x{2053}]
                                      | [\x{2055}-\x{205E}]
                                      | [\x{2190}-\x{23FF}]
                                      | [\x{2500}-\x{2775}]
                                      | [\x{2794}-\x{2BFF}]
                                      | [\x{2E00}-\x{2E7F}]
                                      | [\x{3001}-\x{3003}]
                                      | [\x{3008}-\x{3030}]
                                    )
                                    (
                                        \g&lt;oph&gt;
                                      | (?&lt;opc&gt;                                # operator-character
                                            [\x{0300}-\x{036F}]
                                          | [\x{1DC0}-\x{1DFF}]
                                          | [\x{20D0}-\x{20FF}]
                                          | [\x{FE00}-\x{FE0F}]
                                          | [\x{FE20}-\x{FE2F}]
                                          | [\x{E0100}-\x{E01EF}]
                                        )
                                    )*
                                )
                              | ( \. ( \g&lt;oph&gt; | \g&lt;opc&gt; | \. )+ )            # Dot operators
                            )
                        )
                        \s*
                        (?=\(|&lt;)
                    </string>
		<key>repository.declarations.repository.function.end</key>
		<string>(?&lt;=\}|\G$)(?# functions in protocol declarations or generated interfaces have no body)</string>
		<key>repository.declarations.repository.function.patterns</key>
		<array>
			<dict>
				<key>include</key>
				<string>#comments</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#generic-parameter-clause</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#parameter-clause</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#function-result</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(?:throws|rethrows)\b</string>
				<key>name</key>
				<string>keyword.control.exception.swift</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Swift 3: generic constraints after the parameters and return type</string>
				<key>include</key>
				<string>#generic-where-clause</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#function-body</string>
			</dict>
		</array>
		<key>repository.declarations.repository.import.patterns</key>
		<array>
			<dict>
				<key>begin</key>
				<string>\G(?!;|$|//|/\*)(?:(typealias|struct|class|enum|protocol|var|func)\s+)?</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.swift</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?=;|$|//|/\*)</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.identifier.swift</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.identifier.swift</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(?x)
										(?&lt;=\G|\.)
										(?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;)
									</string>
						<key>name</key>
						<string>entity.name.module.swift</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?x)
										(?&lt;=\G|\.)
										\$[0-9]+
									</string>
						<key>name</key>
						<string>entity.name.type.swift</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>match</key>
										<string>\.</string>
										<key>name</key>
										<string>invalid.illegal.dot-not-allowed-here.swift</string>
									</dict>
								</array>
							</dict>
						</dict>
						<key>match</key>
						<string>(?x)
										(?&lt;=\G|\.)
										(?:
											(
												(?&lt;oph&gt;								# operator-head
													[/=\-+!*%&lt;&gt;&amp;|^~?]
												  | [\x{00A1}-\x{00A7}]
												  | [\x{00A9}\x{00AB}]
												  | [\x{00AC}\x{00AE}]
												  | [\x{00B0}-\x{00B1}\x{00B6}\x{00BB}\x{00BF}\x{00D7}\x{00F7}]
												  | [\x{2016}-\x{2017}\x{2020}-\x{2027}]
												  | [\x{2030}-\x{203E}]
												  | [\x{2041}-\x{2053}]
												  | [\x{2055}-\x{205E}]
												  | [\x{2190}-\x{23FF}]
												  | [\x{2500}-\x{2775}]
												  | [\x{2794}-\x{2BFF}]
												  | [\x{2E00}-\x{2E7F}]
												  | [\x{3001}-\x{3003}]
												  | [\x{3008}-\x{3030}]
												)
												(
													\g&lt;oph&gt;
												  | (?&lt;opc&gt;								# operator-character
														[\x{0300}-\x{036F}]
													  | [\x{1DC0}-\x{1DFF}]
													  | [\x{20D0}-\x{20FF}]
													  | [\x{FE00}-\x{FE0F}]
													  | [\x{FE20}-\x{FE2F}]
													  | [\x{E0100}-\x{E01EF}]
													)
												)*
											)
										  | ( \. ( \g&lt;oph&gt; | \g&lt;opc&gt; | \. )+ )			# Dot operators
										)
										(?=\.|;|$|//|/\*|\s)
									</string>
						<key>name</key>
						<string>entity.name.type.swift</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\.</string>
						<key>name</key>
						<string>punctuation.separator.import.swift</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?!;|$|//|/\*)</string>
						<key>end</key>
						<string>(?=;|$|//|/\*)</string>
						<key>name</key>
						<string>invalid.illegal.character-not-allowed-here.swift</string>
					</dict>
				</array>
			</dict>
		</array>
		<key>repository.declarations.repository.type.patterns</key>
		<array>
			<dict>
				<key>begin</key>
				<string>\b(class(?!\s+(?:func|var|let)\b))\s+((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))(?:\s*:\s*XCTestCase)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.class.swift</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.class.test.swift</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.identifier.swift</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.identifier.swift</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?&lt;=\})</string>
				<key>name</key>
				<string>meta.definition.type.class.test.swift</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#generic-parameter-clause</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>Swift 3: generic constraints after the generic param list</string>
						<key>include</key>
						<string>#generic-where-clause</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#inheritance-clause</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>\{</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.type.begin.swift</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.type.end.swift</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.definition.type.body.swift</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#function-test</string>
							</dict>
							<dict>
								<key>include</key>
								<string>$self</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(class(?!\s+(?:func|var|let)\b)|struct)\s+((?&lt;q&gt;`?)[\p{L}_][\p{L}_\p{N}\p{M}]*(\k&lt;q&gt;))</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.$1.swift</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.$1.swift</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.identifier.swift</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.identifier.swift</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?&lt;=\})</string>
				<key>name</key>
				<string>meta.definition.type.$1.swift</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#generic-parameter-clause</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>Swift 3: generic constraints after the generic param list</string>
						<key>include</key>
						<string>#generic-where-clause</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#inheritance-clause</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>\{</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.type.begin.swift</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.type.end.swift</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.definition.type.body.swift</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>$self</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>include</key>
				<string>#type-enum</string>
			</dict>
		</array>
	</dict>
	<key>isDelta</key>
	<true/>
	<key>uuid</key>
	<string>8C743E89-9C8D-4833-8149-6500D82AA463</string>
</dict>
</plist>
